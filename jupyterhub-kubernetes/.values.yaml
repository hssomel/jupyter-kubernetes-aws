hub:
  image:
    name: gurkamal/jupyter-k8s-hub-for-mongodb
    tag: '0.8.2'
  # Set to always while testing
  imagePullPolicy: Always
  # Dummy token for testing
  cookieSecret: 773305e0ba1846ea2e3f1010e094c05d4ed2ab295f9a4e2fa59fbf58f326b46b
  # imagePullPolicy: IfNotPresent
  extraEnv:
    MONGODB_URL: "mongodb+srv://hsomel:mongoGugu1994@cluster99-nsitq.mongodb.net/test?retryWrites=true&w=majority"
    MONGODB_DATABASE_NAME: "jupyterhub"
    MONGODB_COLLECTION_NAME: "users"
  extraConfig:
    podConfig.py: |
      import os
      import pprint
      from pymongo import MongoClient

      env_var = os.environ
      print("User's Environment variable:") 
      pprint.pprint(dict(env_var), width = 1) 
      
      # Point to right collection
      client = MongoClient(os.environ['MONGODB_URL'])
      database = client[os.environ['MONGODB_DATABASE_NAME']]
      collection = database[os.environ['MONGODB_COLLECTION_NAME']]

      print("client", client)
      print("database", database)
      print("collection", collection)

      for x in collection.find():
          print(x)

      organizational_group = collection.find_one({'github_username': 'gurkamal-io'})['organizational_group']
      print(organizational_group) 
      
      #def namespaced_pre_spawn_start(spawner):
      #    spawner.namespace = 'students'

      # c.KubeSpawner.pre_spawn_hook = namespaced_pre_spawn_start

auth:
  type: github
  github:
    clientId: "58e9db0aef50a89bee9c"
    clientSecret: "36b930d1dd83c93a5b5d39e73670918b9e8a1804"
    callbackUrl: "http://ec2-107-21-88-252.compute-1.amazonaws.com:30000/hub/oauth_callback"
proxy:
  # Dummy token for testing
  secretToken: 773305e0ba1846ea2e3f1010e094c05d4ed2ab295f9a4e2fa59fbf58f326b46b
  service:
    # NodePort during development
    type: NodePort
    nodePorts:
      http: 30000
      https: 30001
    #singleuser:
    # extraEnv:
    # KG_URL: "http://100.71.229.192:8888"
    # KG_HTTP_USER: "{username}"
    # KERNEL_USERNAME: "{username}"
    # KG_REQUEST_TIMEOUT: "60"
# image:
  # name: gurkamal/jupyter-k8s-single-user-for-enterprise-gateway
  # tag: '0.8.2'
  # pullPolicy: IfNotPresent
  storage:
    dynamic:
      storageClass: "aws-efs"
      pvcNameTemplate: "{username}"
      volumeNameTemplate: "{username}"
      storageAccessModes: 
      - "ReadWriteMany"

